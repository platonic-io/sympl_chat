import { chat } from '../assembly-wrapper';
import Koa, { Context }  from 'koa';
import Router from 'koa-router';
import * as um from '../user-manager';

const assembly : Koa = new Koa();
const assemblyRouter : Router = new Router();

{{#each functions}}
assemblyRouter.post('/{{#underscore this.name}}{{/underscore}}', async (ctx: Context) => {
    ctx.body = await chat.{{this.name}}(ctx.state.user{{#each this.parameters}}, 
        {{#if (person this) }}await um.get_user_ka(ctx.request.query.{{this}}){{else}}ctx.request.query.{{this}}{{/if}}{{/each}}
    );
})

{{/each}}
assembly.use(async (ctx:Context, next: any) => {
    await next();
    let body_temp = ctx.body;
    if(body_temp.room) {
        body_temp.room["members"] = await Promise.all(body_temp.room["members"].map(
            async (ka) => await um.get_user_from_ka(ka)
        ))
    }
    ctx.body = body_temp;
    console.log(ctx.body);
})
assembly.use(assemblyRouter.middleware())
export const assembly_api : Koa = assembly;
